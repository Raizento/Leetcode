/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;

import java.util.Arrays;
import java.util.HashMap;
import java.util.List;

public class App {
    public static void main(String[] args) {
        int[] nums = {1001};
        var target = 5;

        var index = searchInsert(nums, target);
        System.out.println(index);
    }

    public static int searchInsert(int[] nums, int target) {
        var map = new HashMap<Integer, Integer>();
        for (int i = 0; i < nums.length; ++i) {
            map.put(nums[i], i);
        }

        var list = Arrays.stream(nums).boxed().toList();

        var middle = list.size() / 2;
        var middleValue = list.get(middle);
        var middleIndex = map.get(middleValue);

        return search(list, target, map, middleIndex, middleValue);
    }

    private static int search(List<Integer> list, int target, HashMap<Integer, Integer> map, int lastMiddleIndex,
            int lastMiddleValue) {
        if (list.size() == 0) {
            if(target <= lastMiddleValue) {
                return lastMiddleIndex;
            }

            return lastMiddleIndex + 1;
        }

        var middle = list.size() / 2;
        var middleValue = list.get(middle); 
        var middleIndex = map.get(middleValue);

        if (list.get(middle) == target) {
            return map.get(list.get(middle));
        }

        if (target < list.get(middle)) {
            return search(list.subList(0, middle), target, map, middleIndex, middleValue);
        } else {
            return search(list.subList(middle + 1, list.size()), target, map, middleIndex, middleValue);
        }
    }
}
